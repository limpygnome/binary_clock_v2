BinaryClock v2.1
***************************************************************************************
About
-------------------------------------------------------------------------------------->
The software used to control my binary clock, written in C++; currently the clock
utilizes the Raspberry Pi Model B Rev 2.0 as hardware.

Features
--------------------------------------------------------------------------------------->
-	Service architecture, like a microkernel with daemons, with each service
	executing under its own thread.
-	Multi-threaded web-service (partial HTTP/1.1 support).
-	- Custom template syntax for function callbacks.
	- Disk-caching for reducing secondary I/O overhead.
-	Complete list of services:
	- Alarm Clock:
		- Allows multiple times to be set.
	- Configuration:
		- Disk thrashing protection.
	- IP to Country Lookup:
		- Daily updates of IP block allocations to countries, which
		  updates the database with the country's of IP's.
	- Relay Board:
		- Allows any sized relay board to be controlled with
		  the ability to set multiple conditions for switching
		  sockets/individual relay points on/off.
	- Sensors
		- Routely polls TMP36 temperature sensor and a photo-resistor.

History
--------------------------------------------------------------------------------------->
This project originally started in mid-April 2012 with Binary Clock v1.0, called
"EvilDuino". The software for this version was written in C# and used the Netduino
Plus (v1.0) as hardware.

Around the end of December 2012, Binary Clock v2.1 was created, called
"The Monolithic Binary Clock" due to its much larger physical appearance as a tower
(for fake electrical sockets). However the repository for v2.0 was pulled in early
June 2013 in preparations for v2.1 as a clean start with many design improvements,
primarily to the service architecture.

Third-Party Libraries
--------------------------------------------------------------------------------------->
libpqxx is required due to the guestbook feature of the web-service using PostgreSQL
(Postgres) for storage.

License
--------------------------------------------------------------------------------------->
All contents of this repository are subject to the following license:

Creative Commons Attribution-ShareAlike 3.0 Unported
http://creativecommons.org/licenses/by-sa/3.0/

Live Version
--------------------------------------------------------------------------------------->
A live version of this clock can sometimes be found at:
http://www.ubermeat.co.uk:82/

